# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Provisioner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, version: str=None, description: str=None, tosca_interface_type: str=None):  # noqa: E501
        """Provisioner - a model defined in Swagger

        :param name: The name of this Provisioner.  # noqa: E501
        :type name: str
        :param version: The version of this Provisioner.  # noqa: E501
        :type version: str
        :param description: The description of this Provisioner.  # noqa: E501
        :type description: str
        :param tosca_interface_type: The tosca_interface_type of this Provisioner.  # noqa: E501
        :type tosca_interface_type: str
        """
        self.swagger_types = {
            'name': str,
            'version': str,
            'description': str,
            'tosca_interface_type': str
        }

        self.attribute_map = {
            'name': 'name',
            'version': 'version',
            'description': 'description',
            'tosca_interface_type': 'tosca_interface_type'
        }

        self._name = name
        self._version = version
        self._description = description
        self._tosca_interface_type = tosca_interface_type

    @classmethod
    def from_dict(cls, dikt) -> 'Provisioner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Provisioner of this Provisioner.  # noqa: E501
        :rtype: Provisioner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Provisioner.


        :return: The name of this Provisioner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Provisioner.


        :param name: The name of this Provisioner.
        :type name: str
        """

        self._name = name

    @property
    def version(self) -> str:
        """Gets the version of this Provisioner.


        :return: The version of this Provisioner.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this Provisioner.


        :param version: The version of this Provisioner.
        :type version: str
        """

        self._version = version

    @property
    def description(self) -> str:
        """Gets the description of this Provisioner.


        :return: The description of this Provisioner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Provisioner.


        :param description: The description of this Provisioner.
        :type description: str
        """

        self._description = description

    @property
    def tosca_interface_type(self) -> str:
        """Gets the tosca_interface_type of this Provisioner.


        :return: The tosca_interface_type of this Provisioner.
        :rtype: str
        """
        return self._tosca_interface_type

    @tosca_interface_type.setter
    def tosca_interface_type(self, tosca_interface_type: str):
        """Sets the tosca_interface_type of this Provisioner.


        :param tosca_interface_type: The tosca_interface_type of this Provisioner.
        :type tosca_interface_type: str
        """

        self._tosca_interface_type = tosca_interface_type

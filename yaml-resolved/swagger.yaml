---
swagger: "2.0"
info:
  description: sdia-manager allows application developers to plan a customized virtual infrastructure based on application level constraints on QoS and resource budgets, provisioning the virtual infrastructure, deploy application components onto the virtual infrastructure, and start execution on demand using TOSCA.
  version: "0.1"
  title: sdia-manager
  contact:
    email: S.Koulouzis@uva.nl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /sdia-manager/3.0
schemes:
- http
paths:
  /tosca_template:
    post:
      summary: upload a tosca template description file
      description: uploads and validates TOSCA template file
      operationId: uploadToscaTemplate
      consumes:
      - multipart/form-data
      parameters:
      - name: file
        in: formData
        description: tosca Template description
        required: true
        type: file
      responses:
        "200":
          description: successful operation
          schema:
            type: string
        "405":
          description: Invalid input
  /tosca_template/ids:
    get:
      summary: Get all topolog template IDs
      description: Returns all IDs
      operationId: getToscaTemplateIDs
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              type: string
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
        "405":
          description: Invalid input
  /tosca_template/{id}:
    get:
      summary: Find topolog template by ID
      description: Returns a single topolog template
      operationId: getToscaTemplateByID
      produces:
      - text/plain
      parameters:
      - name: id
        in: path
        description: ID of topolog template to return
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: string
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
        "405":
          description: Invalid input
    put:
      summary: Updates exisintg topolog template
      description: ""
      operationId: updateToscaTemplateByID
      consumes:
      - multipart/form-data
      produces:
      - text/plain
      parameters:
      - name: file
        in: formData
        description: tosca Template description
        required: false
        type: file
      - name: id
        in: path
        description: ID of topolog template to return
        required: true
        type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: string
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
        "405":
          description: Invalid input
    delete:
      summary: Deletes a tosca topology template
      description: If the topology is provisoned it will delete the provison (Infrastructure). If it is deployed it will delete the deploymet too (Application)
      operationId: deleteToscaTemplateByID
      parameters:
      - name: id
        in: path
        description: ID of topology template to return
        required: true
        type: string
      - name: node_names
        in: query
        description: The node(s) to delete
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        "200":
          description: successful operation
          schema:
            type: string
        "400":
          description: Invalid ID supplied
        "404":
          description: ToscaTemplate not found
definitions:
  Credential: {}
  NodeTemplate: {}
  TopologyTemplate: {}
  ToscaTemplate: {}
  CloudsStormTopTopology: {}
  DB: {}
  DBInfo: {}
  DCMetaInfo: {}
  VMMetaInfo: {}
  CloudsStormVMs: {}
  CloudCredentialDB: {}
  CredentialInfo: {}
  NodeTemplateMap: {}
  Provisioner:
    type: object
    properties:
      name:
        type: string
      version:
        type: string
      description:
        type: string
      tosca_interface_type:
        type: string
